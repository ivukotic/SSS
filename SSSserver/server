#!/bin/sh
#
# http server that waits for requests via SlimSkimService, runs dq2 commands and communicates with oracle db.  
#
# chkconfig:   345 20 80 
# description: http server for SSS
#              

### BEGIN INIT INFO
# Provides: 
# Required-Start: 
# Required-Stop: 
# Should-Start: 
# Should-Stop: 
# Default-Start: 
# Default-Stop: 
# Short-Description: 
# Description:      
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

prog="server"
progpath=/usr/local/bin
logpath=/var/log

lockfile=/var/lock/subsys/$prog

start() {
    #[ -x $exec ] || exit 5
    if [ -e $lockfile ]; then echo "$prog is already running" && exit; fi 
    echo 'Starting sender service...'
    java -jar $progpath/server-1.0-jar-with-dependencies.jar &> $logpath/sender.log &
    retval=$?
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    # stop it here, often "killproc $prog"
    #killproc $prog
    ps xww | pgrep -fl "sender-1.0-jar-with-dependencies.jar" | awk '{print $1}' | xargs -i kill {} 2>/dev/null
    retval=$?
    [ $retval -eq 0 ] && rm -f $lockfile && echo "stopped"
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    pid=$(ps xww | pgrep -fl "sender-1.0-jar-with-dependencies.jar" | awk '{ print $1 }')
    if [ -e $lockfile ];
    then
        if [ $pid > 0 ];
        then
            echo "$prog is running with pid : $pid"
        else
            echo "$prog is dead with stale lockfile"
        fi
    else 
        echo "$prog is not running"
    fi
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        #rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart}"
        exit 2
esac
exit $?
